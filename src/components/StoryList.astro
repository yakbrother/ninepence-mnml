---
import { getCollection } from 'astro:content';

export interface Props {
  stories?: any[];
  currentStory?: string;
}

const { stories, currentStory } = Astro.props;

// If no stories are passed, fetch all stories and sort them by date
let displayStories = stories || [];
if (!stories || stories.length === 0) {
  const allStories = await getCollection('stories');
      displayStories = allStories.sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());
}
---

<aside>
{displayStories.map(story => (
  <article class={`post ${story.id.split('/')[0] === currentStory ? 'current-story-card' : ''}`}>
    <header>
      <time class="post-date" datetime={new Date(story.data.date).toISOString()}>{new Date(story.data.date).toLocaleString('en-GB', { day: 'numeric', month: 'short', year: 'numeric' }).toLowerCase()}</time>
      <h3 class="post-title">
        <a href={`/stories/${story.id.split('/')[0]}/`}>{story.data.title}</a>
      </h3>
    </header>
    <div class="post-summary">{story.data.description}</div>
  </article>
))} 
</aside>

<style>

a {
  text-decoration-style: underline dashed;
  text-decoration-color: var(--color-dark);
  color: var(--color-dark);
}

a:hover {
  text-decoration: underline dashed;
  text-decoration-color: var(--color-link-hover);
  color: var(--color-link-hover);
}

</style>