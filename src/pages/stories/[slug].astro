---
import { sanityClient } from 'sanity:client';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { markdownToHtml } from '../../utils/markdown';

export async function getStaticPaths() {
  try {
    const stories = await sanityClient.fetch(`*[_type == "story"]`);
    return stories.map(story => {
      return {
        params: { slug: story.slug.current },
        props: { story }
      };
    });
  } catch (error) {
    console.error('Error generating static paths:', error);
    return [];
  }
}

const { slug } = Astro.params;

try {
  const story = await sanityClient.fetch(`*[_type == "story" && slug.current == $slug][0]`, { slug });

  if (!story) {
    return new Response('Not found', { status: 404 });
  }

  // Process markdown content
  const processedContent = markdownToHtml(story.content);
---

<BaseLayout
  title={`${story.title.toLowerCase()} | mostly true`}
  description={story.description}
>
  <article class="stack">
    <h1>{story.title.toLowerCase()}</h1>
    <hr/>
    <div class="post-date">{new Date(story.date).toLocaleString('en-GB', { month: 'short', year: 'numeric', day: 'numeric' }).toLowerCase()} - virgil eaton</div>
    <Fragment set:html={processedContent} />
    {Array.isArray(story.tags) && story.tags.length > 0 && (
      <nav class="tag-list" aria-labelledby="tags-heading" style="margin-top:2em;">
        <h2 id="tags-heading" class="visually-hidden">Story tags</h2>
        <ul class="tag-list-items">
          {story.tags.map((tag: string) => (
            <li><a href={`/tags/${encodeURIComponent(tag)}/`} class="tag">{tag.toLowerCase()}</a></li>
          ))}
        </ul>
      </nav>
    )}
  </article>
</BaseLayout> 