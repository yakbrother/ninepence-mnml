---
import { getCollection, getEntry, render, type CollectionEntry } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

export async function getStaticPaths() {
  const stories = await getCollection('stories');
  const tagSet = new Set<string>();
  stories.forEach(story => {
    if (Array.isArray(story.data.tags)) {
      (story.data.tags as string[]).forEach((tag: string) => tagSet.add(tag));
    }
  });
  return stories.map(story => {
    // Extract just the directory name from the story ID
    const slug = story.id.split('/')[0];
    return { 
      params: { slug },
      props: { story }
    };
  });
}

const { story } = Astro.props;
const { Content } = await render(story);
---
<BaseLayout 
  title={`${story.data.title.toLowerCase()} | mostly true`}
  description={story.data.description}
>
  <script type="application/ld+json" is:inline>
    {JSON.stringify({
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": story.data.title,
      "description": story.data.description,
      "datePublished": story.data.date,
      "dateModified": story.data.date,
      "author": {
        "@type": "Person",
        "name": "Virgil Eaton"
      },
      "publisher": {
        "@type": "Organization",
        "name": "Mostly True",
        "logo": {
          "@type": "ImageObject",
          "url": "https://mostlytrue.life/assets/og_default.jpg"
        }
      },
      ...(story.data.tags ? {"keywords": story.data.tags.join(", ")} : {}),
      ...(story.data.image ? {"image": story.data.image} : {"image": "https://mostlytrue.life/assets/og_default.jpg"})
    })}
  </script>
  <article class="stack">
    <h1>{story.data.title.toLowerCase()}</h1>
    <hr/>
    <div class="post-date">{new Date(story.data.date).toLocaleString('en-GB', { month: 'short', year: 'numeric', day: 'numeric' }).toLowerCase()} - virgil eaton</div>
    <div class="stack">
      <Content />
    </div>
    {Array.isArray(story.data.tags) && story.data.tags.length > 0 && (
      <nav class="tag-list" aria-labelledby="tags-heading" style="margin-top:2em;">
        <h2 id="tags-heading" class="visually-hidden">Story tags</h2>
        <ul class="tag-list-items">
          {story.data.tags.map((tag: string) => (
            <li><a href={`/tags/${encodeURIComponent(tag)}/`} class="tag">{tag.toLowerCase()}</a></li>
          ))}
        </ul>
      </nav>
    )}
  </article>
</BaseLayout> 